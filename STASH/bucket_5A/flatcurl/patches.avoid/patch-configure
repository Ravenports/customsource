--- configure.orig	2022-12-21 07:04:49 UTC
+++ configure
@@ -4170,9 +4170,10 @@ printf "%s\n" "$as_me: LIBS note: LIBS s
       -I*)
         xc_bad_var_ldflags=yes
         ;;
-      -l* | --library=*)
-        xc_bad_var_ldflags=yes
-        ;;
+# Temporarily disable -l* flag check for SSP support (Mk/bsd.ssp.mk)
+#      -l* | --library=*)
+#        xc_bad_var_ldflags=yes
+#        ;;
     esac
   done
   if test $xc_bad_var_ldflags = yes; then
@@ -4242,9 +4243,10 @@ printf "%s\n" "$as_me: $xc_bad_var_msg l
   xc_bad_var_cflags=no
   for xc_word in $CFLAGS; do
     case "$xc_word" in
-      -D*)
-        xc_bad_var_cflags=yes
-        ;;
+# Temporarily disable -D* flag check (PR/177401, PR/180944)
+#      -D*)
+#        xc_bad_var_cflags=yes
+#        ;;
       -U*)
         xc_bad_var_cflags=yes
         ;;
@@ -18428,6 +18430,8 @@ printf "%s\n" "$honor_optimize_option" >
     #
     if test "$honor_optimize_option" = "yes"; then
 
+# Do not remove the user-supplied debug flags in CFLAGS (PR/150854)
+if false; then
     ac_var_stripped=""
   for word1 in $tmp_CFLAGS; do
     ac_var_strip_word="no"
@@ -18444,6 +18448,8 @@ printf "%s\n" "$honor_optimize_option" >
   squeeze tmp_CFLAGS
 
 
+# Do not remove the user-supplied optimization flags in CFLAGS (PR/150854)
+if false; then
     ac_var_stripped=""
   for word1 in $tmp_CPPFLAGS; do
     ac_var_strip_word="no"
@@ -18458,6 +18464,8 @@ printf "%s\n" "$honor_optimize_option" >
   done
     tmp_CPPFLAGS="$ac_var_stripped"
   squeeze tmp_CPPFLAGS
+fi
+fi
 
       if test "$want_optimize" = "yes"; then
         { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking if compiler accepts optimizer enabling options" >&5
@@ -29523,31 +29531,31 @@ printf "%s\n" "found" >&6; }
     ;;
   off)
         LIB_RTMP="-lrtmp"
+        LD_RTMP=""
+        CPP_RTMP=""
+        DIR_RTMP=""
     ;;
   *)
         LIB_RTMP="-lrtmp"
+        LD_RTMP="-L${PREFIX_RTMP}/lib$libsuff"
+        CPP_RTMP="-I${PREFIX_RTMP}/include"
+        DIR_RTMP="${PREFIX_RTMP}/lib$libsuff"
     PREFIX_RTMP=$OPT_LIBRTMP
     ;;
   esac
 
-    if test -n "$PREFIX_RTMP"; then
-    LD_RTMP=-L${PREFIX_RTMP}/lib$libsuff
-    CPP_RTMP=-I${PREFIX_RTMP}/include
-    DIR_RTMP=${PREFIX_RTMP}/lib$libsuff
-  fi
-
   LDFLAGS="$LDFLAGS $LD_RTMP"
   CPPFLAGS="$CPPFLAGS $CPP_RTMP"
   LIBS="$LIB_RTMP $LIBS"
 
-  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for RTMP_Init in -lrtmp" >&5
-printf %s "checking for RTMP_Init in -lrtmp... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for RTMP_Init in $LIB_RTMP" >&5
+$as_echo_n "checking for RTMP_Init in $LIB_RTMP... " >&6; }
 if test ${ac_cv_lib_rtmp_RTMP_Init+y}
 then :
   printf %s "(cached) " >&6
 else $as_nop
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-lrtmp  $LIBS"
+LIBS="$LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -45217,9 +45225,10 @@ printf "%s\n" "$as_me: LIBS note: LIBS s
       -I*)
         xc_bad_var_ldflags=yes
         ;;
-      -l* | --library=*)
-        xc_bad_var_ldflags=yes
-        ;;
+# Temporarily disable -l* flag check for SSP support (Mk/bsd.ssp.mk)
+#      -l* | --library=*)
+#        xc_bad_var_ldflags=yes
+#        ;;
     esac
   done
   if test $xc_bad_var_ldflags = yes; then
@@ -45289,9 +45298,10 @@ printf "%s\n" "$as_me: $xc_bad_var_msg l
   xc_bad_var_cflags=no
   for xc_word in $CFLAGS; do
     case "$xc_word" in
-      -D*)
-        xc_bad_var_cflags=yes
-        ;;
+# Temporarily disable -D* flag check (PR/177401, PR/180944)
+#      -D*)
+#        xc_bad_var_cflags=yes
+#        ;;
       -U*)
         xc_bad_var_cflags=yes
         ;;
