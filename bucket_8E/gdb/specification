DEF[PORTVERSION]=	13.1
DEF[SUFFIX]=		${PORTVERSION:S/.//g}
DEF[MBSD64_TARGET]=	EXTRACT_INFO(MIDNIGHT64_CC_TARGET)
# ----------------------------------------------------------------------------

NAMEBASE=		gdb
VERSION=		${PORTVERSION}
KEYWORDS=		devel
VARIANTS=		standard
SDESC[standard]=	GNU debugger
HOMEPAGE=		http://www.gnu.org/software/gdb/
CONTACT=		nobody

DOWNLOAD_GROUPS=	main
SITES[main]=		GNU/gdb
DISTFILE[1]=		gdb-${PORTVERSION}.tar.xz:main

SPKGS[standard]=	complete primary man

OPTIONS_AVAILABLE=	none
OPTIONS_STANDARD=	none

LICENSE=		GPLv3+:primary
LICENSE_FILE=		GPLv3+:{{WRKSRC}}/COPYING
LICENSE_TERMS=		primary:{{WRKDIR}}/TERMS
LICENSE_AWK=		TERMS:"^\#include"
LICENSE_SOURCE=		TERMS:{{WRKSRC}}/gdb/gdb.c
LICENSE_SCHEME=		solo

FPC_EQUIVALENT=		devel/gdb

NOT_FOR_ARCH=		aarch64

BUILD_DEPENDS=		gmp:static:standard
BUILDRUN_DEPENDS=	gmp:shared:standard
			source-highlight:primary:standard

USES=			cpe iconv gmake libtool readline pkgconfig
			makeinfo python expat ncurses gettext zstd
CPE_VENDOR=		gnu
MUST_CONFIGURE=		gnu
CONFIGURE_OUTSOURCE=	yes
CONFIGURE_ENV=		CONFIGURED_M4=m4
			CONFIGURED_BISON=byacc
CONFIGURE_ARGS=		--program-suffix=${SUFFIX}
			--enable-targets=all
			--enable-64-bit-bfd
			--enable-tui
			--disable-build-with-cxx
			--with-gdb-datadir={{PREFIX}}/share/gdb${SUFFIX}
			{{ICONV_CONFIGURE_ARG}}
			--with-system-readline
			--with-expat=yes
			--with-libexpat-prefix={{LOCALBASE}}
			--without-libunwind-ia64
			--with-python={{PYTHON_CMD}}
			--with-source-highlight
CFLAGS=			-DRL_NO_COMPAT
			-D__STDC_CONSTANT_MACROS
			-D__STDC_LIMIT_MACROS
			-Wno-unused-function
			-Wno-unused-variable
PLIST_SUB=		VER=${SUFFIX}
EXTRACT_HEAD[1]=	{{TAR}} -xf
EXTRACT_TAIL[1]=	--exclude dejagnu --exclude expect --exclude sim --exclude texinfo --exclude intl --exclude readline

VAR_OPSYS[midnightbsd]=	MAKEFILE_LINE=CONFIGURE_TARGET=${MBSD64_TARGET}

post-patch:
	${REINPLACE_CMD} -e 's|$$| [GDB v${PORTVERSION} for ${OPSYS}]|' \
		${WRKSRC}/gdb/version.in
	# remove leftover readline removed garbage
	${REINPLACE_CMD} -e 's|..READLINE.*user.texi||' \
		${WRKSRC}/gdb/doc/Makefile.in

post-patch-dragonfly:
	${CP} ${OPSYSDIR}/dfly-tdep.* ${WRKSRC}/gdb/
	${CP} ${OPSYSDIR}/dfly-nat.*  ${WRKSRC}/gdb/
	${CP} ${OPSYSDIR}/i386*       ${WRKSRC}/gdb/
	${CP} ${OPSYSDIR}/amd64*      ${WRKSRC}/gdb/

do-install:
	${INSTALL_PROGRAM} ${INSTALL_WRKSRC}/gdb/gdb \
		${STAGEDIR}${PREFIX}/bin/gdb${SUFFIX}
	${INSTALL_MAN} ${WRKSRC}/gdb/doc/gdb.1 \
		${STAGEDIR}${MAN1PREFIX}/man/man1/gdb${SUFFIX}.1
	(cd ${INSTALL_WRKSRC}/gdb/data-directory ; \
		${SETENV} ${MAKE_ENV} ${MAKE_CMD} ${MAKE_ARGS} install-syscalls )
	${LN} -sf gdb${SUFFIX} ${STAGEDIR}${PREFIX}/bin/gdbtui${SUFFIX}
	${LN} -sf gdb${SUFFIX} ${STAGEDIR}${PREFIX}/bin/gdb
	(cd ${INSTALL_WRKSRC}/gdb && ${SETENV} ${MAKE_ENV} \
		${MAKE_CMD} ${MAKE_ARGS} install-python )
	(cd ${INSTALL_WRKSRC}/gdb/data-directory && ${SETENV} ${MAKE_ENV} \
		${MAKE_CMD} ${MAKE_ARGS} install-python )
. for f in gdb gdb/command gdb/function gdb/printer
	(cd ${STAGEDIR}${PREFIX}/share/gdb${SUFFIX}/python/${f} ; ${CHMOD} 644 *.py* )
. endfor
