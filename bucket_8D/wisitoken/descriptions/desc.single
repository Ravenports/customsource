WisiToken is an LALR, LR1, and Packrat parser generator and run-time.
The grammar can be specified in a bison-like input file, or as Ada
statements. The LR parser supports generalized parsing (parallel parsers
to handle conflicts) and syntax error recovery (inserting and deleting
tokens to allow parsing to continue).

The primary customer for WisiToken is the Emacs Ada mode indentation,
fontification, and navigation engine, which uses an LR1 parser generated
by WisiToken.

The Ada grammar specified in the Ada Language Reference manual is not
LALR(1); it has shift/reduce and reduce/reduce conflicts. Modifying the
grammar to be LALR(1) is hard, and complicates adding future changes to
the language.. Using a generalized LALR parser to handle the conflicts
allows keeping the grammar (mostly) in its original form.

Recovering from syntax errors allows indentation, fontification, and
navigation in files that are in the process of being edited.

WisiToken provides two lexers:
 - a simple regular-expression based lexer, used mostly in unit tests
 - an interface to the re2c lexer, which supports unicode source files

WisiToken is a significant rewrite of OpenToken, deleting support for
recursive-descent, adding syntax error correction in the parser, and
adding support for simple Packrat parsers.
