<div align="center">
  [image]<br>
</div>

-----------------

# pandas: powerful Python data analysis toolkit

| | |
| --- | --- |
| Testing | [![CI -
Test]](https://github.com/pandas-dev/pandas/actions/workflows/unit-tests.yml)
[Coverage] |
| Package | [PyPI Latest Release] [PyPI Downloads] [Conda Latest Release]
[Conda Downloads] |
| Meta | [Powered by NumFOCUS] [DOI] [![License - BSD
3-Clause]](https://github.com/pandas-dev/pandas/blob/main/LICENSE) [Slack]
|

## What is it?

**pandas** is a Python package that provides fast, flexible, and expressive
data
structures designed to make working with "relational" or "labeled" data
both
easy and intuitive. It aims to be the fundamental high-level building block
for
doing practical, **real world** data analysis in Python. Additionally, it
has
the broader goal of becoming **the most powerful and flexible open source
data
analysis / manipulation tool available in any language**. It is already
well on
its way towards this goal.

## Table of Contents

- [Main Features]
- [Where to get it]
- [Dependencies]
- [Installation from sources]
- [License]
- [Documentation]
- [Background]
- [Getting Help]
- [Discussion and Development]
- [Contributing to pandas]

## Main Features
Here are just a few of the things that pandas does well:

  - Easy handling of [**missing data**][missing-data] (represented as
    `NaN`, `NA`, or `NaT`) in floating point as well as non-floating point
data
  - Size mutability: columns can be [**inserted and
    deleted**][insertion-deletion] from DataFrame and higher dimensional
    objects
  - Automatic and explicit [**data alignment**][alignment]: objects can
    be explicitly aligned to a set of labels, or the user can simply
    ignore the labels and let `Series`, `DataFrame`, etc. automatically
    align the data for you in computations
  - Powerful, flexible [**group by**][groupby] functionality to perform
    split-apply-combine operations on data sets, for both aggregating
    and transforming data
  - Make it [**easy to convert**][conversion] ragged,
    differently-indexed data in other Python and NumPy data structures
    into DataFrame objects
  - Intelligent label-based [**slicing**][slicing], [**fancy
    indexing**][fancy-indexing], and [**subsetting**][subsetting] of
    large data sets
  - Intuitive [**merging**][merging] and [**joining**][joining] data
    sets
  - Flexible [**reshaping**][reshape] and [**pivoting**][pivot-table] of
    data sets
  - [**Hierarchical**][mi] labeling of axes (possible to have multiple
    labels per tick)
  - Robust IO tools for loading data from [**flat files**][flat-files]
    (CSV and delimited), [**Excel files**][excel], [**databases**][db],
    and saving/loading data from the ultrafast [**HDF5 format**][hdfstore]
  - [**Time series**][timeseries]-specific functionality: date range
    generation and frequency conversion, moving window statistics,
    date shifting and lagging

   [missing-data]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/missing_data.html
   [insertion-deletion]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#column-selection-addition-deletion
   [alignment]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html?highlight=alignment#intro-to-data-structures
   [groupby]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/groupby.html#group-by-split-apply-combine
   [conversion]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/dsintro.html#dataframe
   [slicing]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#slicing-ranges
   [fancy-indexing]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/advanced.html#advanced
   [subsetting]:
https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#boolean-indexing
   [merging]:
